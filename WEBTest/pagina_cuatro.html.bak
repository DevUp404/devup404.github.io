<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<meta name="keywords" content="HTML, CSS, JavaScript">
	<meta name="description" content="Sobre elemento de HTML">
	<meta name="author" content="Elias">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>HTML forms, tercera parte</title>
	<link rel="stylesheet" href="style/style_one.css">
</head>
<body>

<h1>HTML Input form* Attributes</h1>
<hr>
<p>This chapter describes the different form* attributes for the HTML &lt;input&gt; element.</p>
<hr>

<p>Un vistazo a los atributos del elemento "input"</p>
<ol>
	<li>form - form attribute</li>
	<li>formaction</li>
	<li>formenctype</li>
	<li>formmethod</li>
	<li>formtarget - formattribute</li>
	<li>formnovalidate</li>
	<li>formnovalidate</li>
</ol>
<hr>

<h2>The form Attribute</h2>
	<p>The input form attribute specifies the form the &lt;input&gt; element belongs to.<br>
		The value of this attribute must be equal to the id attribute of the &lt;form&gt; element it belongs to.<br>
		An input field located outside of the HTML form (but still a part of the form):
	</p>
	<form id="form1">
		<label for="priname">Primer nombre:</label>
		<input type="text" id="priname" name="priname"><br>
	</form>
	
	<label for="segname">segundo nombre:</label>
	<input type="text" id="segname" name="segname" form="form1"><br><br>
<hr>
<h2>The formaction Attribute</h2>
	<p>The input formaction attribute specifies the URL of the file that will process the input when the form is submitted<br>
			<b>Note:</b> The formaction attribute works with the following input types: submit and image.e: This attribute overrides the action attribute of the &lt;form&gt; element.<br>
			The formaction attribute works with the following input types: submit and image.
	</p>
	
	<form action="redic.html">
		<label for="fname">First name:</label>
		<input type="text" id="fname" name="fname"><br><br>
		<label for="lname">Last name:</label>
		<input type="text" id="lname" name="lname"><br><br>
		<input type="submit" value="Submit">
		<input type="submit" formaction="index.html" value="Submit as Admin">
	</form>
<hr>
<h2>The formenctype Attribute</h2>
<p>The input formenctype attribute specifies how the form-data should be encoded when submitted (only for forms with method="post").<br>
		<b>Note:</b> This attribute overrides the enctype attribute of the &lt;form&gt; element.<br>
		The formenctype attribute works with the following input types: submit and image.<br>
		A form with two submit buttons. The first sends the form-data with default encoding, the second sends the form-data encoded as "multipart/form-data":
</p>
<form action="redic.html" method="post">
  <label for="fname">First name:</label>
  <input type="text" id="fname" name="fname"><br><br>
  <input type="submit" value="Submit">
  <input type="submit" formenctype="multipart/form-data"
  value="Submit as Multipart/form-data">
</form>
<hr>
<h2>The formmethod Attribute</h2>
	<p>The input formmethod attribute defines the HTTP method for sending form-data to the action URL.<br>
		<b>Note:</b> This attribute overrides the method attribute of the &lt;form&gt; element.<br>
		The formmethod attribute works with the following input types: submit and image.<br>
		The form-data can be sent as URL variables (method="get") or as an HTTP post transaction (method="post").
	</p>
	<h3><b>Notes on the "get" method:</b></h3>
	<ul>
		<li>This method appends the form-data to the URL in name/value pairs</li><hr>
		<li>This method is useful for form submissions where a user want to bookmark the result.</li><hr>
		<li>There is a limit to how much data you can place in a URL (varies between browsers), therefore, you cannot be sure that all of the form-data will be correctly transferred.</li><hr>
		<li>Never use the "get" method to pass sensitive information! (password or other sensitive information will be visible in the browser's address bar).</li><hr>
	</ul>
	
	<h3><b>Notes on the "post" method:</b></h3>
	<ul>
	<li>This method sends the form-data as an HTTP post transaction.</li><hr>
	<li>Form submissions with the "post" method cannot be bookmarked.</li><hr>
	<li>The "post" method is more robust and secure than "get", and "post" does not have size limitations.</li>
	</ul>
	<p>A form with two submit buttons. The first sends the form-data with method="get". The second sends the form-data with method="post":</p>
	<form action="redic.html" method="get">
		<label for="fname">First name:</label>
		<input type="text" id="fname" name="fname"><br><br>
		<label for="lname">Last name:</label>
		<input type="text" id="lname" name="lname"><br><br>
		<input type="submit" value="Submit using GET">
		<input type="submit" formmethod="post" value="Submit using POST">
	</form>
	
<hr>
<h2>The formtarget Attribute</h2>

<p>The input formtarget attribute specifies a name or a keyword that indicates where to display the response that is received after submitting the form.<br>
		<b>Note:</b> This attribute overrides the target attribute of the &lt;form&gt; element.<br>
		The formtarget attribute works with the following input types: submit and image.
</p>
<p>A form with two submit buttons, with different target windows:</p>

<form action="index.html">
  <label for="fname">First name:</label>
  <input type="text" id="fname" name="fname"><br><br>
  <label for="lname">Last name:</label>
  <input type="text" id="lname" name="lname"><br><br>
  <input type="submit" value="Submit">
  <input type="submit" formtarget="_blank" value="Submit to a new window/tab">
</form><hr>
<h2>The formnovalidate Attribute</h2>
<p>The input formnovalidate attribute specifies that an &lt;input&gt; element should not be validated when submitted.<br>
	<b>Note:</b> This attribute overrides the novalidate attribute of the &lt;form&gt; element.<br>
	The formnovalidate attribute works with the following input types: submit.<br>
</p>
<p>A form with two submit buttons (with and without validation):</p>
<form action="https://www.w3schools.com/colors/colors_picker.asp">
  <label for="email">Enter your email:</label>
  <input type="email" id="email" name="email"><br><br>
  <input type="submit" value="Submit">
  <input type="submit" formnovalidate="formnovalidate" value="Submit without validation">
</form>
<hr>
<h2>The novalidate Attribute</h2>
<p>The novalidate attribute is a &lt;form&gt; attribute.<br>
		When present, novalidate specifies that all of the form-data should not be validated when submitted.<br>
</p>
<p>Specify that no form-data should be validated on submit:</p>
<form action="https://www.w3schools.com/colors/colors_picker.asp" novalidate>
  <label for="email">Enter your email:</label>
  <input type="email" id="email" name="email"><br><br>
  <input type="submit" value="Submit">
</form>
<hr>
<p></p>
</body>
</html>